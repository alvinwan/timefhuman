%import common.WS
%import common.INT
%ignore WS

// ----------------------
// TERMINAL DEFINITIONS
// ----------------------

// Month names as a regex token, case-insensitive
MONTHNAME: /(?i)(january|february|march|april|may|june|july|august|september|october|november|december|jan|feb|mar|apr|jun|jul|aug|sep|oct|nov|dec)/

// For weekdays, also as a single regex token, case-insensitive
WEEKDAY: /(?i)(monday|mon|tuesday|tues|tue|tu|wednesday|wed|thursday|thurs|thur|thu|friday|fri|saturday|sat|sunday|sun)/

// Meridiem token (am/pm, with optional dots)
MERIDIEM: /(?i)([ap](\.?m\.?)?)/

// Datename token specifies only day
DATENAME: /(?i)(today|tomorrow|tmw|yesterday)/

// Timename token specifies only time
TIMENAME: /(?i)(noon|midday|midnight|morning|afternoon|evening|night)/

// Datetimename token specifies date and time
DATETIMENAME: /(?i)(tonight)/

// Duration unit (minutes, hours, days, etc.)
DURATION_UNIT: /(?i)(seconds|second|secs|sec|minutes|mins|min|hours|hour|hrs|hr|h|days|day|weeks|week|wks|wk|months|month|mos|years|year)/
DURATION_UNIT_LETTER: /(?i)(s|m|h|d|w|mo|y)(?![a-z])/

// Duration number (digits like "1", or words like "an", "a", "one", "two", etc.)
DURATION_NUMBER: /(?i)(an|a|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|nineteen|twenty|thirty|forty|fifty|sixty|seventy|eighty|ninety)/

// Day suffix (th, rd, st, nd)
DAY_SUFFIX: /(?i)(th|rd|st|nd)/

FLOAT_NUMBER: /((\d+\.\d*|\.\d+)(e[-+]?\d+)?|\d+(e[-+]?\d+))/i  // from lark

TIMEZONE: /(?i)((TIMEZONE_MAPPING))/

MODIFIER: /(?i)(next|last|this|upcoming|previous|past)/

POSITION: /(?i)(first|second|third|fourth|last)/

// ----------------------
// PARSER RULES
// ----------------------
start: (expression | unknown)+

expression: single
          | list
          | range

range: single ("to" | "-") single

list: single ((","|"or")+ single)+ 
    | range ((","|"or")+ range)+

single: datetime 
      | duration
      | ambiguous

// Only add houronly to specific formats that immediately
// indicate this is an hour-only time.
datetime: date ("at" (time | houronly))?
        | date (time | houronly)
        | date "T" time  // ISO 8601
        | (time | houronly) date
        | (time | houronly) "on" date
        | date
        | time
        | datetimename

// NOTE: process month modifiers here since the modifier affects the year, which
// won't be processed until the date rule. If additional modifiers are added,
// update the date rule processor to handle them. It currently assumes that only
// the month can be modified.
date: weekday? month "/" day "/" year
    | weekday? year "/" month "/" day
    | weekday? month "/" dayoryear
    | weekday? month "-" day "-" year
    | weekday? year "-" month "-" day
    | weekday? month "-" dayoryear
    | weekday? datename
    | weekday? monthname day DAY_SUFFIX? (",")? year
    | weekday? monthname day DAY_SUFFIX
    | weekday? day DAY_SUFFIX
    | weekday? monthname dayoryear
    | modifier+ monthname
    | position weekday ("of"|"in") monthname
    | weekday

// intentionally not allowing int-only time, so that single-integers can be
// classified as an ambiguous token (in case it's a month, day, year, etc.)
// However, that means to support single-integer (e.g., hour) times, we need
// to manually add them to the `datetime` rule above.
time: hour ":" minute (":" second ("." millisecond)?)? meridiem? timezone?
    | hour ("o'clock")? meridiem timezone?
    | timename timezone?

duration: ("in"|"for")? duration_part (("and"|",")? duration_part)* ("ago")?
duration_part: duration_number (duration_unit | duration_unit_letter)
             | duration_numbername " " duration_unit
duration_number: FLOAT_NUMBER | INT
duration_numbername: DURATION_NUMBER+
duration_unit: DURATION_UNIT
duration_unit_letter: DURATION_UNIT_LETTER

datetimename: DATETIMENAME

// process date modifiers here since the weekday processor fully determines the date
weekday: (modifier+)? WEEKDAY
monthname: (modifier+)? MONTHNAME
datename: DATENAME
dayoryear: INT

day: /0[1-9]|[12][0-9]|3[01]|[1-9]/
month: /0[1-9]|1[0-2]|[1-9]/
year: /\d{4}|(?<!\d)\d{2}(?!\d)/

timename: TIMENAME
hour: INT
minute: INT
second: INT
millisecond: INT
meridiem: MERIDIEM
houronly: INT
timezone: TIMEZONE  // `TIMEZONE` is generated dynamically
modifier: MODIFIER
position: POSITION

ambiguous: INT

unknown: /\S/